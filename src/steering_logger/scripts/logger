#!/usr/bin/env python

import cv2
import csv
import rospy
from std_msgs.msg import Image
from std_msgs.msg import Float64
from cv_bridge import CvBridge, CvBridgeError


class SteeringLogger(object):

    def __init__(self):
        self.current_angle = 0.0
        self.labels = []
        self.image_files = []
        self.count = 0

        rospy.init_node('steering_logger')
        rospy.Subscribe('/cv_camera/image_raw', Image, callback=self.logger_callback, queue_size=5)
        rospy.Subscribe('/sensor/steering_encoder/value', Float64, callback=self.encoder_callback, queue_size=5)
        rospy.on_shutdown(self.save_data)
        rospy.spin()

    def save_data(self):

        with open("" + "/lables.csv", 'w') as myfile:
            wr = csv.writer(myfile, lineterminator='\n')
            for row in self.labels:
                wr.writerow(row)

    def encoder_callback(self, data):
        self.current_angle = data

    def logger_callback(self, data):

        try:
            cv_image = self.bridge.imgmsg_to_cv2(data, "bgr8")
        except CvBridgeError as e:
            print(e)

        self.count += 1
        cv2.imwrite("my path" + "/center/" + str(self.count) + ".png", cv_image)
        row = ["/center/" + str(self.count) + ".png", self.current_angle]
        self.labels.append(row)


if __name__ == '__main__':

    try:
        SteeringLogger()
    except rospy.ROSInterruptException:
        pass