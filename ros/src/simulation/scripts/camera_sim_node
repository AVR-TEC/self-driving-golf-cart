#!/usr/bin/python

"""
publish the frames of the dataset
images collect at Deerfield Academy
under the topic of: /cv_camera/image_sim

The dataset contains about 2300 frames of images
collected at around 10 frames per second.

(c) Neil Nie, 2018
All Rights Reserved
Contact: contact@neilnie.com

"""

import cv2
import pandas as pd
import os
import rospy
from sensor_msgs.msg import Image
from std_msgs.msg import Float32
from cv_bridge import CvBridge, CvBridgeError


class CameraSimNode():

    def __init__(self):

        rospy.init_node('cv_camera_sim_node')
        self.bridge = CvBridge()

        self.camera_pub = rospy.Publisher('/cv_camera_node/image_sim', Image, queue_size=10)
        self.sim_angle_pub = rospy.Publisher("/simulation/dbw/steering_cmds", Float32, queue_size=10)

        frame_path = rospy.get_param("/camera_sim_node/sim_data_path")
        time_delay = rospy.get_param("/camera_sim_node/time_delay")

        self.rate = rospy.Rate(1)

        # The csv data is read below. It must have two columns. the first column is image name,
        # second frame steering angle the csv file contains many nonexisting frame information
        # which is disregarded in the flowing loop.
        df_truth = pd.read_csv(frame_path + "/labels.csv").values

        rospy.loginfo("Simulated Camera Feed Initialized. Publisher path: '/cv_camera_node/image_sim'")
        while not rospy.is_shutdown():

            for data in df_truth:
                im_path = frame_path + data[0]

                if os.path.isfile(im_path):
                    frame = cv2.imread(im_path)
                    try:
                        img_msg = self.bridge.cv2_to_imgmsg(frame, "bgr8")
                    except CvBridgeError as e:
                        raise e
                    self.sim_angle_pub.publish(data[1])
                    self.camera_pub.publish(img_msg)
                    rospy.sleep(time_delay)

            self.rate.sleep()
            rospy.signal_shutdown("Data Set Exhausted")

if __name__ == "__main__":

    try:
        CameraSimNode()
    except rospy.ROSInterruptException:
        print("Error Launching CameraSim Node")